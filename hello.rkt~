#lang racket

(define (fib n) 
  (cond 
    [(= n 0) 0]
    [(= n 1) 1]
    [else (+ (fib (- n 1)) (fib (- n 2)))]))

(define (double fn v) (fn (fn v)))

(double (lambda (s) (string-append s "!!")) "Hello")

(fib 35)